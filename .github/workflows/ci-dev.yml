name: CI_DEV

on:
  pull_request:
    branches: [deploy]
  push:
    branches: [deploy]

jobs:
  start-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Setup Java JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '18'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

  lint:
    name: Perform lint check
    needs: [ start-ci ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    name: Unit Test
    needs: [ start-ci ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run Unit test
        run: ./gradlew test

  build:
    name: Generate APK
    runs-on: ubuntu-latest
    needs: [ unit-test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Setup Java JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '18'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Assemble App APK
        run: ./gradlew assembleDebug --stacktrace
      - name: Upload App APK
        uses: actions/upload-artifact@v4.0.0
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
      - name: Assemble Android Instrumented Unit Test
        run: ./gradlew assembleDebugAndroidTest
      - name: Upload Android Test APK
        uses: actions/upload-artifact@v4.0.0
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

#  instrumentation-test:
#    name: Run UI tests with Firebase Test Lab
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4.1.1
#      - name: Download app APK
#        uses: actions/download-artifact@v4
#        with:
#          name: app-debug
#      - name: Download Android test APK
#        uses: actions/download-artifact@v4
#        with:
#          name: app-debug-androidTest
#      - name: Debug
#        run: |
#          ls -al
#      - name: Run tests on Firebase Test Lab
#        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
#        with:
#          arg-spec: '.github/data/tests.yml:mobile'
#        env:
#          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

#      static-code-analysis:
#        name: Perform static code analysis
#        needs: [instrumentation-test]
#        runs-on: ubuntu-latest
#        steps:
#          - name: Checkout the code
#            uses: actions/checkout@v2
#
#          - name: Set up Java JDK 17
#            uses: actions/setup-java@v1
#            with:
#              java-version: '17'
#
#          - name: SonarCloud Scan # sonarcloud properties in gradle.properties file
#            run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#            env:
#              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}